{"version":3,"sources":["webpack://portfolio/./src/components/Heading/HeadingStyled.js","webpack://portfolio/./src/components/Heading/Heading.js","webpack://portfolio/./src/pages/about.js"],"names":["StyledHeading","withStyles","theme","root","fontWeight","fontSize","letterSpacing","opacity","marginLeft","color","breakpoints","down","Typography","StyledContainer","position","display","paddingTop","alignItems","justifyContent","Container","children","maxWidth","y","variant","useStyles","makeStyles","container","boxShadow","minHeight","paddingLeft","backgroundColor","textContainer","width","StyledText","Line","styled","classes","disableGutters","id","className","style","overflow","x"],"mappings":"qLAEaA,GAAgBC,QAAW,SAACC,GAAD,YAAY,CAClDC,MAAI,GACFC,WAAY,OACZC,SAAU,OACVC,cAAe,MACfC,QAAS,GACTC,WAAY,OACZC,MAAO,SANL,EAODP,EAAMQ,YAAYC,KAAK,OAAQ,CAC9BN,SAAU,QARV,MADuBJ,CAYzBW,KAESC,GAAkBZ,QAAW,SAACC,GAAD,MAAY,CACpDC,KAAM,CACJW,SAAU,WACVC,QAAS,OACTC,WAAY,OACZC,WAAY,SACZC,eAAgB,eANWjB,CAQ3BkB,K,UCHJ,EAhBgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,gBAACP,EAAD,CAAiBQ,UAAU,GACzB,gBAAC,KAAD,CAAUC,EAAG,CAAC,IAAK,KACjB,gBAACtB,EAAD,CAAeuB,QAAQ,MACrB,gBAACX,EAAA,EAAD,CAAYW,QAAQ,UAAUd,MAAM,aAApC,KAGCW,EACD,gBAACR,EAAA,EAAD,CAAYW,QAAQ,UAAUd,MAAM,aAApC,U,uHCFFe,GAAYC,QAAW,SAACvB,GAAD,cAAY,CACvCwB,WAAS,GACPC,UAAW,uCACXC,UAAW,QACXC,YAAa,KACbC,gBAAiB,UACjBf,QAAS,OACTE,WAAY,UANL,EAONf,EAAMQ,YAAYC,KAAK,OAAQ,GAPzB,GASToB,eAAa,GACXC,MAAO,QACPxB,WAAY,OAFD,EAGVN,EAAMQ,YAAYC,KAAK,OAAQ,CAC9BH,WAAY,EACZwB,MAAO,OALE,EAOV9B,EAAMQ,YAAYC,KAAK,OAAQ,CAC9BqB,MAAO,OARE,OAaThC,GAAgBC,QAAW,SAACC,GAAD,YAAY,CAC3CC,MAAI,GACFM,MAAO,QACPL,WAAY,QAFV,EAGDF,EAAMQ,YAAYC,KAAK,OAAQ,CAC9BN,SAAU,QAJV,MADgBJ,CAQlBW,KAEEqB,GAAahC,QAAW,SAACC,GAAD,YAAY,CACxCC,MAAI,GACFM,MAAO,SADL,EAEDP,EAAMQ,YAAYC,KAAK,OAAQ,CAC9BN,SAAU,QAHV,MADaJ,CAOfW,KAEEsB,EAAOC,mBAAH,uDAAGA,CAAH,yFAgDV,WAEA,UA1Cc,WACZ,IAAMC,EAAUZ,IAEhB,OACE,gCACE,gBAAC,IAAD,cACA,gBAAC,IAAD,CACEH,UAAU,EACVgB,gBAAc,EACdC,GAAG,QACHC,UAAWH,EAAQV,UACnBc,MAAO,CAAEC,SAAU,WAEnB,gBAAC,KAAD,CAAUC,EAAG,EAAE,GAAI,KACjB,uBAAKH,UAAWH,EAAQL,eACtB,gBAAC/B,EAAD,CAAeuB,QAAQ,MAAvB,QACQ,IACN,gBAAC,IAAD,CAAYd,MAAM,YAAYc,QAAQ,WAAtC,OAIF,gBAACU,EAAD,CAAYV,QAAQ,MAApB,ucAWA,gBAACW,EAAD","file":"component---src-pages-about-js-5a0a7fea14861febbc72.js","sourcesContent":["import { Typography, withStyles, Container } from \"@material-ui/core\";\r\n\r\nexport const StyledHeading = withStyles((theme) => ({\r\n  root: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"90px\",\r\n    letterSpacing: \"5px\",\r\n    opacity: 0.2,\r\n    marginLeft: \"10px\",\r\n    color: \"white\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"50px\",\r\n    },\r\n  },\r\n}))(Typography);\r\n\r\nexport const StyledContainer = withStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    paddingTop: \"60px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}))(Container);\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { StyledHeading, StyledContainer } from \"./HeadingStyled\";\r\nimport { Parallax } from \"react-scroll-parallax\";\r\n\r\nconst Heading = ({ children }) => (\r\n  <StyledContainer maxWidth={false}>\r\n    <Parallax y={[70, -70]}>\r\n      <StyledHeading variant=\"h1\">\r\n        <Typography variant=\"inherit\" color=\"secondary\">\r\n          &lt;\r\n        </Typography>\r\n        {children}\r\n        <Typography variant=\"inherit\" color=\"secondary\">\r\n          &gt;\r\n        </Typography>\r\n      </StyledHeading>\r\n    </Parallax>\r\n  </StyledContainer>\r\n);\r\n\r\nexport default Heading;\r\n","import {\r\n  makeStyles,\r\n  Container,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Heading from \"../components/Heading/Heading\";\r\nimport styled from \"styled-components\";\r\nimport { Parallax } from \"react-scroll-parallax\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    boxShadow: \"0px -13px 39px -7px rgba(0,0,0,0.69)\",\r\n    minHeight: \"100vh\",\r\n    paddingLeft: \"8%\",\r\n    backgroundColor: \"#252728\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {},\r\n  },\r\n  textContainer: {\r\n    width: \"800px\",\r\n    marginLeft: \"15%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginLeft: 0,\r\n      width: \"70%\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"90%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst StyledHeading = withStyles((theme) => ({\r\n  root: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"60px\",\r\n    },\r\n  },\r\n}))(Typography);\r\n\r\nconst StyledText = withStyles((theme) => ({\r\n  root: {\r\n    color: \"white\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"13px\",\r\n    },\r\n  },\r\n}))(Typography);\r\n\r\nconst Line = styled.hr`\r\n  width: 50%;\r\n  border: 3px solid #632efa;\r\n  position: absolute;\r\n  margin-top: 2%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst About = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Heading>about</Heading>\r\n      <Container\r\n        maxWidth={false}\r\n        disableGutters\r\n        id=\"about\"\r\n        className={classes.container}\r\n        style={{ overflow: \"hidden\" }}\r\n      >\r\n        <Parallax x={[-60, 60]}>\r\n          <div className={classes.textContainer}>\r\n            <StyledHeading variant=\"h1\">\r\n              About{\" \"}\r\n              <Typography color=\"secondary\" variant=\"inherit\">\r\n                Me\r\n              </Typography>\r\n            </StyledHeading>\r\n            <StyledText variant=\"h6\">\r\n              I’m highly motivated guy who hates leave any loose ends. I’ve\r\n              started my frontend journey since 2019. Since then, I spend every\r\n              free moment to messing with the code and I really enjoy it. I\r\n              create every layout by myself. I’m looking for some ideas on the\r\n              internet, take my favourite parts and put it together in Figma.\r\n              When I’m not coding or programming, you can find me somewhere\r\n              between my lizards or tarantulas or just on the fields in\r\n              Battlefield.\r\n            </StyledText>\r\n\r\n            <Line />\r\n          </div>\r\n        </Parallax>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\n<></>;\r\n\r\nexport default About;\r\n"],"sourceRoot":""}