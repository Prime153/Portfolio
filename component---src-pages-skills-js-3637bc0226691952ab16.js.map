{"version":3,"sources":["webpack://portfolio/./src/pages/skills.js"],"names":["StyledImage","styled","Img","useStyles","makeStyles","theme","container","zIndex","display","minHeight","paddingLeft","backgroundColor","overflow","breakpoints","down","padding","title","justifyContent","position","width","opacity","fontSize","data","useStaticQuery","items","useRef","classes","useEffect","randomX","random","randomY","randomTime","randomTime2","randomAngle","rotate","target","direction","gsap","rotation","ease","Sine","onComplete","onCompleteParams","moveX","x","moveY","y","min","max","delta","Math","current","forEach","logos","ScrollTrigger","duration","scrollTrigger","trigger","maxWidth","disableGutters","id","className","alignContent","justify","allFile","nodes","map","elem","item","key","ref","element","push","fluid","childImageSharp"],"mappings":"8NASMA,GAAcC,QAAOC,KAAV,sEAAGD,CAAH,8GAYXE,GAAYC,QAAW,SAACC,GAAD,cAAY,CACvCC,WAAS,GACPC,OAAQ,IACRC,QAAS,OACTC,UAAW,QACXC,YAAa,KACbC,gBAAiB,UACjBC,SAAU,UANH,EAONP,EAAMQ,YAAYC,KAAK,OAAQ,CAC9BC,QAAS,GARJ,GAWTC,OAAK,GACHR,QAAS,OACTS,eAAgB,SAChBC,SAAU,WACVC,MAAO,MACPC,QAAS,GACTL,QAAS,UANN,EAOFV,EAAMQ,YAAYC,KAAK,OAAQ,CAC9BO,SAAU,OACVF,MAAO,QATN,OA8HP,UAhHe,WACb,IAAMG,GAAOC,QAAe,cAetBC,GAAQC,YAAO,IACfC,EAAUvB,IAsEhB,OApEAwB,gBAAU,WACR,IAAMC,EAAUC,EAAO,EAAG,IACpBC,EAAUD,EAAO,EAAG,KACpBE,EAAaF,EAAO,EAAG,IACvBG,EAAcH,EAAO,EAAG,IACxBI,EAAcJ,GAAQ,GAAI,GA6BhC,SAASK,EAAOC,EAAQC,GACtBC,QAAQF,EAAQH,IAAe,CAC7BM,SAAUL,EAAYG,GAEtBG,KAAMC,eACNC,WAAYP,EACZQ,iBAAkB,CAACP,GAAqB,EAAbC,KAI/B,SAASO,EAAMR,EAAQC,GACrBC,QAAQF,EAAQJ,IAAc,CAC5Ba,EAAGhB,EAAQQ,GACXG,KAAMC,eACNC,WAAYE,EACZD,iBAAkB,CAACP,GAAqB,EAAbC,KAI/B,SAASS,EAAMV,EAAQC,GACrBC,QAAQF,EAAQJ,IAAc,CAC5Be,EAAGhB,EAAQM,GACXG,KAAMC,eACNC,WAAYI,EACZH,iBAAkB,CAACP,GAAqB,EAAbC,KAI/B,SAASP,EAAOkB,EAAKC,GACnB,IAAMC,EAAQD,EAAMD,EACpB,OAAO,SAACX,GAAD,gBAACA,MAAY,IAAOW,EAAME,EAAQC,KAAKrB,UAAYO,GAzD9CC,mBAAmBb,EAAM2B,SACjCC,SAAQ,SAACC,GACbhB,SAASgB,EAAO,CACdT,EAAGhB,GAAS,GACZkB,EAAGlB,EAAQ,GACXU,SAAUL,GAAa,KAGzBU,EAAMU,EAAO,GACbR,EAAMQ,GAAQ,GACdnB,EAAOmB,EAAO,MAEhBhB,oBAAoBiB,KACpBjB,YACEb,EAAM2B,QACN,CACE/B,QAAS,GAEX,CACEA,QAAS,EACTmC,SAAU,EACVC,cAAe,CACbC,QAASjC,EAAM2B,cAwCrB,gCACE,gBAAC,IAAD,eACA,gBAAC,IAAD,CACEO,UAAU,EACVC,gBAAc,EACdC,GAAG,SACHC,UAAWnC,EAAQpB,WAEnB,gBAAC,IAAD,CAAMA,WAAS,EAACwD,aAAa,SAASC,QAAQ,UAC3CzC,EAAK0C,QAAQC,MAAMC,KAAI,SAACC,GAGvB,OACE,gBAAC,IAAD,CAAMC,MAAI,EAACC,IAAKF,EAAKP,GAAIU,IAHV,SAACC,GAAD,OAAa/C,EAAM2B,QAAQqB,KAAKD,KAI7C,gBAACvE,EAAD,CAAayE,MAAON,EAAKO,gBAAgBD","file":"component---src-pages-skills-js-3637bc0226691952ab16.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport gsap, { Sine } from \"gsap\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\nimport Heading from \"../components/Heading/Heading\";\r\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\r\n\r\nconst StyledImage = styled(Img)`\r\n  width: 130px;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 1400px) {\r\n    width: 100px;\r\n  }\r\n  @media (max-width: 800px) {\r\n    width: 80px;\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    zIndex: 999,\r\n    display: \"flex\",\r\n    minHeight: \"100vh\",\r\n    paddingLeft: \"8%\",\r\n    backgroundColor: \"#252728\",\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: 0,\r\n    },\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    position: \"absolute\",\r\n    width: \"90%\",\r\n    opacity: 0.3,\r\n    padding: \"20px 0\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"60px\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Skills = () => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allFile(filter: { absolutePath: { regex: \"/images/logos/\" } }) {\r\n        nodes {\r\n          id\r\n          childImageSharp {\r\n            fluid(maxWidth: 200) {\r\n              ...GatsbyImageSharpFluid_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const items = useRef([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const randomX = random(1, 70);\r\n    const randomY = random(1, 300);\r\n    const randomTime = random(3, 10);\r\n    const randomTime2 = random(5, 10);\r\n    const randomAngle = random(-10, 5);\r\n\r\n    const logos = gsap.utils.toArray(items.current);\r\n    logos.forEach((logos) => {\r\n      gsap.set(logos, {\r\n        x: randomX(-1),\r\n        y: randomX(1),\r\n        rotation: randomAngle(-1),\r\n      });\r\n\r\n      moveX(logos, 1);\r\n      moveY(logos, -1);\r\n      rotate(logos, 1);\r\n    });\r\n    gsap.registerPlugin(ScrollTrigger);\r\n    gsap.fromTo(\r\n      items.current,\r\n      {\r\n        opacity: 0,\r\n      },\r\n      {\r\n        opacity: 1,\r\n        duration: 3,\r\n        scrollTrigger: {\r\n          trigger: items.current,\r\n        },\r\n      }\r\n    );\r\n\r\n    function rotate(target, direction) {\r\n      gsap.to(target, randomTime2(), {\r\n        rotation: randomAngle(direction),\r\n\r\n        ease: Sine.easeInOut,\r\n        onComplete: rotate,\r\n        onCompleteParams: [target, direction * -1],\r\n      });\r\n    }\r\n\r\n    function moveX(target, direction) {\r\n      gsap.to(target, randomTime(), {\r\n        x: randomX(direction),\r\n        ease: Sine.easeInOut,\r\n        onComplete: moveX,\r\n        onCompleteParams: [target, direction * -1],\r\n      });\r\n    }\r\n\r\n    function moveY(target, direction) {\r\n      gsap.to(target, randomTime(), {\r\n        y: randomY(direction),\r\n        ease: Sine.easeInOut,\r\n        onComplete: moveY,\r\n        onCompleteParams: [target, direction * -1],\r\n      });\r\n    }\r\n\r\n    function random(min, max) {\r\n      const delta = max - min;\r\n      return (direction = 1) => (min + delta * Math.random()) * direction;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Heading>skills</Heading>\r\n      <Container\r\n        maxWidth={false}\r\n        disableGutters\r\n        id=\"skills\"\r\n        className={classes.container}\r\n      >\r\n        <Grid container alignContent=\"center\" justify=\"center\">\r\n          {data.allFile.nodes.map((elem) => {\r\n            const refArray = (element) => items.current.push(element);\r\n\r\n            return (\r\n              <Grid item key={elem.id} ref={refArray}>\r\n                <StyledImage fluid={elem.childImageSharp.fluid} />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n"],"sourceRoot":""}